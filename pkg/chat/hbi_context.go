//go:generate hbic

// Code generated by hbic - the HBI Contexter, DO NOT EDIT.
// Normally you just create a seed file named `hbi_context.go` inside which ever directory intends to be
// a Go package exposed via HBI, with the `//go:generate hbic` directive as the only line, and run
// 	 `go generate`
// for the contents to be updated every time after the package source changed.

package chat

import (
	"github.com/complyue/hbigo"
	"reflect"
)

func NewHBICtx() hbi.Context {
	hbic := hbi.NewContext(
		// exposed types
		reflect.TypeOf((*Msg)(nil)).Elem(),
		// exposed funcs
		map[string]interface{}{
			"Chat": func(content string, session string) {
				Chat(hbic, content, session)
			},
			"MsgLog": func(session string) []string {
				return MsgLog(session)
			},
			"LastMsg": func(session string) string {
				return LastMsg(session)
			},
		},
	)
	return hbic
}
